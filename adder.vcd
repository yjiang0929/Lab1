$date
	Sun Sep 30 13:25:02 2018
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module testFullAdder $end
$var wire 32 ! sum [31:0] $end
$var wire 1 " overflow $end
$var wire 1 # carryout $end
$var reg 32 $ a [31:0] $end
$var reg 32 % b [31:0] $end
$scope module adder $end
$var wire 32 & a [31:0] $end
$var wire 32 ' b [31:0] $end
$var wire 1 ( carryoutXor $end
$var wire 1 ) msbXor $end
$var wire 1 * nmsbXor $end
$var wire 1 " overflow $end
$var wire 32 + sum [31:0] $end
$var wire 1 # carryout $end
$scope module adder0 $end
$var wire 1 , A $end
$var wire 1 - AandB $end
$var wire 1 . AxorB $end
$var wire 1 / AxorBandC $end
$var wire 1 0 B $end
$var wire 1 1 carryin $end
$var wire 1 2 carryout $end
$var wire 1 3 sum $end
$upscope $end
$scope module adder1 $end
$var wire 1 4 A $end
$var wire 1 5 AandB $end
$var wire 1 6 AxorB $end
$var wire 1 7 AxorBandC $end
$var wire 1 8 B $end
$var wire 1 2 carryin $end
$var wire 1 9 carryout $end
$var wire 1 : sum $end
$upscope $end
$scope module adder10 $end
$var wire 1 ; A $end
$var wire 1 < AandB $end
$var wire 1 = AxorB $end
$var wire 1 > AxorBandC $end
$var wire 1 ? B $end
$var wire 1 @ carryout $end
$var wire 1 A sum $end
$var wire 1 B carryin $end
$upscope $end
$scope module adder11 $end
$var wire 1 C A $end
$var wire 1 D AandB $end
$var wire 1 E AxorB $end
$var wire 1 F AxorBandC $end
$var wire 1 G B $end
$var wire 1 @ carryin $end
$var wire 1 H carryout $end
$var wire 1 I sum $end
$upscope $end
$scope module adder12 $end
$var wire 1 J A $end
$var wire 1 K AandB $end
$var wire 1 L AxorB $end
$var wire 1 M AxorBandC $end
$var wire 1 N B $end
$var wire 1 H carryin $end
$var wire 1 O carryout $end
$var wire 1 P sum $end
$upscope $end
$scope module adder13 $end
$var wire 1 Q A $end
$var wire 1 R AandB $end
$var wire 1 S AxorB $end
$var wire 1 T AxorBandC $end
$var wire 1 U B $end
$var wire 1 O carryin $end
$var wire 1 V carryout $end
$var wire 1 W sum $end
$upscope $end
$scope module adder14 $end
$var wire 1 X A $end
$var wire 1 Y AandB $end
$var wire 1 Z AxorB $end
$var wire 1 [ AxorBandC $end
$var wire 1 \ B $end
$var wire 1 V carryin $end
$var wire 1 ] carryout $end
$var wire 1 ^ sum $end
$upscope $end
$scope module adder15 $end
$var wire 1 _ A $end
$var wire 1 ` AandB $end
$var wire 1 a AxorB $end
$var wire 1 b AxorBandC $end
$var wire 1 c B $end
$var wire 1 ] carryin $end
$var wire 1 d carryout $end
$var wire 1 e sum $end
$upscope $end
$scope module adder16 $end
$var wire 1 f A $end
$var wire 1 g AandB $end
$var wire 1 h AxorB $end
$var wire 1 i AxorBandC $end
$var wire 1 j B $end
$var wire 1 d carryin $end
$var wire 1 k carryout $end
$var wire 1 l sum $end
$upscope $end
$scope module adder17 $end
$var wire 1 m A $end
$var wire 1 n AandB $end
$var wire 1 o AxorB $end
$var wire 1 p AxorBandC $end
$var wire 1 q B $end
$var wire 1 k carryin $end
$var wire 1 r carryout $end
$var wire 1 s sum $end
$upscope $end
$scope module adder18 $end
$var wire 1 t A $end
$var wire 1 u AandB $end
$var wire 1 v AxorB $end
$var wire 1 w AxorBandC $end
$var wire 1 x B $end
$var wire 1 r carryin $end
$var wire 1 y carryout $end
$var wire 1 z sum $end
$upscope $end
$scope module adder19 $end
$var wire 1 { A $end
$var wire 1 | AandB $end
$var wire 1 } AxorB $end
$var wire 1 ~ AxorBandC $end
$var wire 1 !" B $end
$var wire 1 y carryin $end
$var wire 1 "" carryout $end
$var wire 1 #" sum $end
$upscope $end
$scope module adder2 $end
$var wire 1 $" A $end
$var wire 1 %" AandB $end
$var wire 1 &" AxorB $end
$var wire 1 '" AxorBandC $end
$var wire 1 (" B $end
$var wire 1 9 carryin $end
$var wire 1 )" carryout $end
$var wire 1 *" sum $end
$upscope $end
$scope module adder20 $end
$var wire 1 +" A $end
$var wire 1 ," AandB $end
$var wire 1 -" AxorB $end
$var wire 1 ." AxorBandC $end
$var wire 1 /" B $end
$var wire 1 "" carryin $end
$var wire 1 0" carryout $end
$var wire 1 1" sum $end
$upscope $end
$scope module adder21 $end
$var wire 1 2" A $end
$var wire 1 3" AandB $end
$var wire 1 4" AxorB $end
$var wire 1 5" AxorBandC $end
$var wire 1 6" B $end
$var wire 1 0" carryin $end
$var wire 1 7" carryout $end
$var wire 1 8" sum $end
$upscope $end
$scope module adder22 $end
$var wire 1 9" A $end
$var wire 1 :" AandB $end
$var wire 1 ;" AxorB $end
$var wire 1 <" AxorBandC $end
$var wire 1 =" B $end
$var wire 1 7" carryin $end
$var wire 1 >" carryout $end
$var wire 1 ?" sum $end
$upscope $end
$scope module adder23 $end
$var wire 1 @" A $end
$var wire 1 A" AandB $end
$var wire 1 B" AxorB $end
$var wire 1 C" AxorBandC $end
$var wire 1 D" B $end
$var wire 1 >" carryin $end
$var wire 1 E" carryout $end
$var wire 1 F" sum $end
$upscope $end
$scope module adder24 $end
$var wire 1 G" A $end
$var wire 1 H" AandB $end
$var wire 1 I" AxorB $end
$var wire 1 J" AxorBandC $end
$var wire 1 K" B $end
$var wire 1 E" carryin $end
$var wire 1 L" carryout $end
$var wire 1 M" sum $end
$upscope $end
$scope module adder25 $end
$var wire 1 N" A $end
$var wire 1 O" AandB $end
$var wire 1 P" AxorB $end
$var wire 1 Q" AxorBandC $end
$var wire 1 R" B $end
$var wire 1 L" carryin $end
$var wire 1 S" carryout $end
$var wire 1 T" sum $end
$upscope $end
$scope module adder26 $end
$var wire 1 U" A $end
$var wire 1 V" AandB $end
$var wire 1 W" AxorB $end
$var wire 1 X" AxorBandC $end
$var wire 1 Y" B $end
$var wire 1 S" carryin $end
$var wire 1 Z" carryout $end
$var wire 1 [" sum $end
$upscope $end
$scope module adder27 $end
$var wire 1 \" A $end
$var wire 1 ]" AandB $end
$var wire 1 ^" AxorB $end
$var wire 1 _" AxorBandC $end
$var wire 1 `" B $end
$var wire 1 Z" carryin $end
$var wire 1 a" carryout $end
$var wire 1 b" sum $end
$upscope $end
$scope module adder28 $end
$var wire 1 c" A $end
$var wire 1 d" AandB $end
$var wire 1 e" AxorB $end
$var wire 1 f" AxorBandC $end
$var wire 1 g" B $end
$var wire 1 a" carryin $end
$var wire 1 h" carryout $end
$var wire 1 i" sum $end
$upscope $end
$scope module adder29 $end
$var wire 1 j" A $end
$var wire 1 k" AandB $end
$var wire 1 l" AxorB $end
$var wire 1 m" AxorBandC $end
$var wire 1 n" B $end
$var wire 1 h" carryin $end
$var wire 1 o" carryout $end
$var wire 1 p" sum $end
$upscope $end
$scope module adder3 $end
$var wire 1 q" A $end
$var wire 1 r" AandB $end
$var wire 1 s" AxorB $end
$var wire 1 t" AxorBandC $end
$var wire 1 u" B $end
$var wire 1 )" carryin $end
$var wire 1 v" carryout $end
$var wire 1 w" sum $end
$upscope $end
$scope module adder30 $end
$var wire 1 x" A $end
$var wire 1 y" AandB $end
$var wire 1 z" AxorB $end
$var wire 1 {" AxorBandC $end
$var wire 1 |" B $end
$var wire 1 o" carryin $end
$var wire 1 }" carryout $end
$var wire 1 ~" sum $end
$upscope $end
$scope module adder31 $end
$var wire 1 !# A $end
$var wire 1 "# AandB $end
$var wire 1 ## AxorB $end
$var wire 1 $# AxorBandC $end
$var wire 1 %# B $end
$var wire 1 }" carryin $end
$var wire 1 # carryout $end
$var wire 1 &# sum $end
$upscope $end
$scope module adder4 $end
$var wire 1 '# A $end
$var wire 1 (# AandB $end
$var wire 1 )# AxorB $end
$var wire 1 *# AxorBandC $end
$var wire 1 +# B $end
$var wire 1 v" carryin $end
$var wire 1 ,# carryout $end
$var wire 1 -# sum $end
$upscope $end
$scope module adder5 $end
$var wire 1 .# A $end
$var wire 1 /# AandB $end
$var wire 1 0# AxorB $end
$var wire 1 1# AxorBandC $end
$var wire 1 2# B $end
$var wire 1 ,# carryin $end
$var wire 1 3# carryout $end
$var wire 1 4# sum $end
$upscope $end
$scope module adder6 $end
$var wire 1 5# A $end
$var wire 1 6# AandB $end
$var wire 1 7# AxorB $end
$var wire 1 8# AxorBandC $end
$var wire 1 9# B $end
$var wire 1 3# carryin $end
$var wire 1 :# carryout $end
$var wire 1 ;# sum $end
$upscope $end
$scope module adder7 $end
$var wire 1 <# A $end
$var wire 1 =# AandB $end
$var wire 1 ># AxorB $end
$var wire 1 ?# AxorBandC $end
$var wire 1 @# B $end
$var wire 1 :# carryin $end
$var wire 1 A# carryout $end
$var wire 1 B# sum $end
$upscope $end
$scope module adder8 $end
$var wire 1 C# A $end
$var wire 1 D# AandB $end
$var wire 1 E# AxorB $end
$var wire 1 F# AxorBandC $end
$var wire 1 G# B $end
$var wire 1 A# carryin $end
$var wire 1 H# carryout $end
$var wire 1 I# sum $end
$upscope $end
$scope module adder9 $end
$var wire 1 J# A $end
$var wire 1 K# AandB $end
$var wire 1 L# AxorB $end
$var wire 1 M# AxorBandC $end
$var wire 1 N# B $end
$var wire 1 H# carryin $end
$var wire 1 B carryout $end
$var wire 1 O# sum $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
xO#
0N#
xM#
xL#
xK#
0J#
xI#
xH#
0G#
xF#
xE#
xD#
0C#
xB#
xA#
0@#
x?#
x>#
x=#
0<#
x;#
x:#
09#
x8#
x7#
x6#
05#
x4#
x3#
02#
x1#
x0#
x/#
0.#
x-#
x,#
0+#
x*#
x)#
x(#
0'#
x&#
0%#
x$#
x##
x"#
0!#
x~"
x}"
0|"
x{"
xz"
xy"
0x"
xw"
xv"
0u"
xt"
xs"
xr"
0q"
xp"
xo"
0n"
xm"
xl"
xk"
0j"
xi"
xh"
0g"
xf"
xe"
xd"
0c"
xb"
xa"
0`"
x_"
x^"
x]"
0\"
x["
xZ"
0Y"
xX"
xW"
xV"
0U"
xT"
xS"
0R"
xQ"
xP"
xO"
0N"
xM"
xL"
0K"
xJ"
xI"
xH"
0G"
xF"
xE"
0D"
xC"
xB"
xA"
0@"
x?"
x>"
0="
x<"
x;"
x:"
09"
x8"
x7"
06"
x5"
x4"
x3"
02"
x1"
x0"
0/"
x."
x-"
x,"
0+"
x*"
x)"
0("
x'"
x&"
x%"
0$"
x#"
x""
0!"
x~
x}
x|
0{
xz
xy
0x
xw
xv
xu
0t
xs
xr
0q
xp
xo
xn
0m
xl
xk
0j
xi
xh
xg
0f
xe
xd
0c
xb
xa
x`
0_
x^
x]
0\
x[
xZ
xY
0X
xW
xV
0U
xT
xS
xR
0Q
xP
xO
0N
xM
xL
xK
0J
xI
xH
0G
xF
xE
xD
0C
xB
xA
x@
0?
x>
x=
x<
0;
x:
x9
08
x7
x6
x5
04
x3
x2
01
00
x/
x.
x-
0,
bx +
x*
x)
x(
b0 '
b0 &
b0 %
b0 $
x#
x"
bx !
$end
#20000
0.
0-
06
05
0&"
0%"
0s"
0r"
0)#
0(#
00#
0/#
07#
06#
0>#
0=#
0E#
0D#
0L#
0K#
0=
0<
0E
0D
0L
0K
0S
0R
0Z
0Y
0a
0`
0h
0g
0o
0n
0v
0u
0}
0|
0-"
0,"
04"
03"
0;"
0:"
0B"
0A"
0I"
0H"
0P"
0O"
0W"
0V"
0^"
0]"
0e"
0d"
0l"
0k"
0z"
0y"
0##
0"#
0)
0/
#40000
bx0 !
bx0 +
03
07
0'"
0t"
0*#
01#
08#
0?#
0F#
0M#
0>
0F
0M
0T
0[
0b
0i
0p
0w
0~
0."
05"
0<"
0C"
0J"
0Q"
0X"
0_"
0f"
0m"
0{"
0$#
1*
02
#60000
09
0)"
0v"
0,#
03#
0:#
0A#
0H#
0B
0@
0H
0O
0V
0]
0d
0k
0r
0y
0""
00"
07"
0>"
0E"
0L"
0S"
0Z"
0a"
0h"
0o"
0}"
0#
bx00 !
bx00 +
0:
#80000
0*"
0w"
0-#
04#
0;#
0B#
0I#
0O#
0A
0I
0P
0W
0^
0e
0l
0s
0z
0#"
01"
08"
0?"
0F"
0M"
0T"
0["
0b"
0i"
0p"
0~"
b0 !
b0 +
0&#
#100000
0(
#120000
0"
#5000000
1,
14
1$"
1q"
1'#
1.#
15#
1<#
1C#
1J#
1;
1C
1J
1Q
1X
1_
1f
1m
1t
1{
1+"
12"
19"
1@"
1G"
1N"
1U"
1\"
1c"
1j"
1x"
1!#
b11111111111111111111111111111111 $
b11111111111111111111111111111111 &
#5020000
1.
16
1&"
1s"
1)#
10#
17#
1>#
1E#
1L#
1=
1E
1L
1S
1Z
1a
1h
1o
1v
1}
1-"
14"
1;"
1B"
1I"
1P"
1W"
1^"
1e"
1l"
1z"
1##
1)
#5040000
13
1:
1*"
1w"
1-#
14#
1;#
1B#
1I#
1O#
1A
1I
1P
1W
1^
1e
1l
1s
1z
1#"
11"
18"
1?"
1F"
1M"
1T"
1["
1b"
1i"
1p"
1~"
b11111111111111111111111111111111 !
b11111111111111111111111111111111 +
1&#
0*
#5060000
1(
#10000000
